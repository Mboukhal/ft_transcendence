# rules:
    - backend with NestJS.
    - frontend with a TypeScript framework.
    - use just latest stable version of libraries.
    - postgreSQL as database.
    - single-page application + the user able to navigate between pages.
    - must be compatible with the latest version of Chrome + additional web browser.
    - no unhandled errors and warnings.
    - every thing should lunch with "docker-compose run --build".
# Security:
    - any password should be encrypted.
    - protect against SQL injection.
    - implement server-side validation.
    - .env must be ignored by git.
# User Account:
    - user must be login using OAuth system of 42 intranet.
    - user able to choose unique username.
    - user should be able to upload an avatar, if no avatar uploaded, a default avatar will be used.
    - user should be able to enable 2FA.
    - user should be able to add other friends, and see their status.
    - Stats should be displayed on the user profile.
    - each user should have a match history. and anyone can see it.
# Chat:
    - the user should be able to create private/public/protected chat rooms.
    - the user should be able to send direct messages to other users.
    - the user should be able to block other users.
    - the user that create a chat room should be channel owner.
    - the channel owner should be able set channel password or change it or remove it.
    - the channel owner should be able to set other users as administrators.
    - the channel administrators can kick/ban/mute(for a limited time) other users but not the channel owner.
    - the user should be able to invite other to ping pong match through the chat interface.
    - the user should be able to access other users through the chat interface.
# Game:
    - the user should be able to play ping pong match vs other users.
    - there must be a matchmaking system.
    - the game must be faithful the original ping pong (1972).
    - there must be custom games mode + original game mode.
    - the game must be responsive.